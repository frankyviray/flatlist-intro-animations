{"version":3,"sources":["Fade.tsx"],"names":["React","useRef","useEffect","Animated","Easing","FadeItem","renderItem","args","animationDuration","focused","opacity","Value","current","itemStyles","timing","toValue","duration","delay","index","easing","linear","useNativeDriver","start"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SACEC,QADF,EAKEC,MALF,QAMO,cANP;;AAeA,MAAMC,QAAyB,GAAG,CAAC;AACjCC,EAAAA,UADiC;AAEjCC,EAAAA,IAFiC;AAGjCC,EAAAA,iBAAiB,GAAG,IAHa;AAIjCC,EAAAA;AAJiC,CAAD,KAK5B;AACJ,QAAMC,OAAO,GAAGT,MAAM,CAAC,IAAIE,QAAQ,CAACQ,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAA9C;AAEA,QAAMC,UAAU,GAAG,CACjB;AACEH,IAAAA;AADF,GADiB,CAAnB;AAMAR,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,QAAQ,CAACW,MAAT,CAAgBJ,OAAhB,EAAyB;AACvBK,MAAAA,OAAO,EAAEN,OAAO,GAAG,CAAH,GAAO,CADA;AAEvBO,MAAAA,QAAQ,EAAER,iBAFa;AAGvBS,MAAAA,KAAK,EAAEV,IAAI,CAACW,KAAL,GAAa,EAHG;AAIvBC,MAAAA,MAAM,EAAEf,MAAM,CAACgB,MAJQ;AAKvBC,MAAAA,eAAe,EAAE;AALM,KAAzB,EAMGC,KANH;AAOD,GARQ,CAAT;;AAUA,MAAI,CAACb,OAAL,EAAc;AACZ,WAAO,IAAP;AACD;;AAED,sBAAO,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAEI;AAAtB,KAAmCP,UAAU,CAACC,IAAD,CAA7C,CAAP;AACD,CA7BD;;AA+BA,eAAeF,QAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport {\n  Animated,\n  ListRenderItem,\n  ListRenderItemInfo,\n  SectionListRenderItem,\n  Easing,\n} from 'react-native';\n\ninterface Props {\n  renderItem: ListRenderItem<any> | SectionListRenderItem<object>;\n  args: any;\n  animationDuration?: number;\n  focused?: boolean;\n}\n\nconst FadeItem: React.FC<Props> = ({\n  renderItem,\n  args,\n  animationDuration = 1000,\n  focused,\n}) => {\n  const opacity = useRef(new Animated.Value(0)).current;\n\n  const itemStyles = [\n    {\n      opacity,\n    },\n  ];\n\n  useEffect(() => {\n    Animated.timing(opacity, {\n      toValue: focused ? 1 : 0,\n      duration: animationDuration,\n      delay: args.index * 50,\n      easing: Easing.linear,\n      useNativeDriver: true,\n    }).start();\n  });\n\n  if (!focused) {\n    return null;\n  }\n\n  return <Animated.View style={itemStyles}>{renderItem(args)}</Animated.View>;\n};\n\nexport default FadeItem;\n"]}