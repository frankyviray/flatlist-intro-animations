{"version":3,"sources":["AnimatedSectionList.tsx"],"names":["React","SectionList","SlideFromBottomAnimatedItem","SlideFromRightAnimatedItem","FadeAnimatedItem","AnimationType","RotateAnimatedItem","DiveAnimatedItem","AnimatedSectionList","sections","renderItem","renderSectionHeader","animationType","animationDuration","focused","sectionlistRef","contentContainerStyle","scrollIndicatorInsets","ListEmptyComponent","ListHeaderComponent","ListFooterComponent","onScroll","onViewableItemsChanged","viewabilityConfig","refreshing","onRefresh","keyExtractor","handleRenderItem","args","SlideFromBottom","SlideFromRight","Fade","Rotate","Dive","None"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,WADF,QAUO,cAVP;AAYA,SACEC,2BADF,EAEEC,0BAFF,EAGEC,gBAHF,EAIEC,aAJF,EAKEC,kBALF,EAMEC,gBANF,QAOO,GAPP;;AAqCA,MAAMC,mBAAoC,GAAG,CAAC;AAC5CC,EAAAA,QAD4C;AAE5CC,EAAAA,UAF4C;AAG5CC,EAAAA,mBAH4C;AAI5CC,EAAAA,aAJ4C;AAK5CC,EAAAA,iBAL4C;AAM5CC,EAAAA,OAAO,GAAG,IANkC;AAO5CC,EAAAA,cAP4C;AAQ5CC,EAAAA,qBAR4C;AAS5CC,EAAAA,qBAT4C;AAU5CC,EAAAA,kBAV4C;AAW5CC,EAAAA,mBAX4C;AAY5CC,EAAAA,mBAZ4C;AAa5CC,EAAAA,QAb4C;AAc5CC,EAAAA,sBAd4C;AAe5CC,EAAAA,iBAf4C;AAgB5CC,EAAAA,UAhB4C;AAiB5CC,EAAAA,SAjB4C;AAkB5CC,EAAAA;AAlB4C,CAAD,KAmBvC;AACJ,QAAMC,gBAAqB,GAAIC,IAAD,IAAe;AAC3C,YAAQhB,aAAR;AACE,WAAKP,aAAa,CAACwB,eAAnB;AACE,4BACE,oBAAC,2BAAD;AACE,UAAA,UAAU,EAAEnB,UADd;AAEE,UAAA,IAAI,EAAEkB,IAFR;AAGE,UAAA,OAAO,EAAEd;AAHX,UADF;;AAOF,WAAKT,aAAa,CAACyB,cAAnB;AACE,4BACE,oBAAC,0BAAD;AACE,UAAA,UAAU,EAAEpB,UADd;AAEE,UAAA,IAAI,EAAEkB,IAFR;AAGE,UAAA,OAAO,EAAEd;AAHX,UADF;;AAOF,WAAKT,aAAa,CAAC0B,IAAnB;AACE,4BACE,oBAAC,gBAAD;AACE,UAAA,UAAU,EAAErB,UADd;AAEE,UAAA,IAAI,EAAEkB,IAFR;AAGE,UAAA,iBAAiB,EAAEf,iBAHrB;AAIE,UAAA,OAAO,EAAEC;AAJX,UADF;;AAQF,WAAKT,aAAa,CAAC2B,MAAnB;AACE,4BACE,oBAAC,kBAAD;AACE,UAAA,UAAU,EAAEtB,UADd;AAEE,UAAA,IAAI,EAAEkB,IAFR;AAGE,UAAA,iBAAiB,EAAEf,iBAHrB;AAIE,UAAA,OAAO,EAAEC;AAJX,UADF;;AAQF,WAAKT,aAAa,CAAC4B,IAAnB;AACE,4BACE,oBAAC,gBAAD;AACE,UAAA,UAAU,EAAEvB,UADd;AAEE,UAAA,IAAI,EAAEkB,IAFR;AAGE,UAAA,OAAO,EAAEd;AAHX,UADF;;AAOF,WAAKT,aAAa,CAAC6B,IAAnB;AACE,eAAOxB,UAAU,CAACkB,IAAD,CAAjB;;AACF;AACE;AA9CJ;AAgDD,GAjDD;;AAmDA,sBACE,oBAAC,WAAD;AACE,IAAA,GAAG,EAAEb,cADP;AAEE,IAAA,qBAAqB,EAAEC,qBAFzB;AAGE,IAAA,qBAAqB,EAAEC,qBAHzB;AAIE,IAAA,QAAQ,EAAER,QAJZ;AAKE,IAAA,UAAU,EAAEkB,gBALd;AAME,IAAA,mBAAmB,EAAEhB,mBANvB;AAOE,IAAA,UAAU,EAAEa,UAPd;AAQE,IAAA,SAAS,EAAEC,SARb;AASE,IAAA,kBAAkB,EAAEP,kBATtB;AAUE,IAAA,mBAAmB,EAAEC,mBAVvB;AAWE,IAAA,mBAAmB,EAAEC,mBAXvB;AAYE,IAAA,QAAQ,EAAEC,QAZZ;AAaE,IAAA,sBAAsB,EAAEC,sBAb1B;AAcE,IAAA,iBAAiB,EAAEC,iBAdrB;AAeE,IAAA,YAAY,EAAEG;AAfhB,IADF;AAmBD,CA1FD;;AA4FA,eAAelB,mBAAf","sourcesContent":["import React from 'react';\nimport {\n  SectionList,\n  SectionListRenderItem,\n  NativeSyntheticEvent,\n  NativeScrollEvent,\n  StyleProp,\n  ViewStyle,\n  Insets,\n  ViewToken,\n  SectionListData,\n} from 'react-native';\n\nimport {\n  SlideFromBottomAnimatedItem,\n  SlideFromRightAnimatedItem,\n  FadeAnimatedItem,\n  AnimationType,\n  RotateAnimatedItem,\n  DiveAnimatedItem,\n} from '.';\n\ninterface Props {\n  sections: ReadonlyArray<SectionListData<object>>;\n  renderItem: SectionListRenderItem<object>;\n  renderSectionHeader?: (info: {\n    section: SectionListData<any>;\n  }) => React.ReactElement;\n  animationType: AnimationType;\n  animationDuration?: number;\n  focused?: boolean;\n  contentContainerStyle?: StyleProp<ViewStyle>;\n  scrollIndicatorInsets?: Insets;\n  sectionlistRef?:\n    | ((instance: SectionList<object> | null) => void)\n    | React.RefObject<SectionList<object>>;\n  ListEmptyComponent?: React.ComponentType<any> | React.ReactElement;\n  ListHeaderComponent?: React.ComponentType<any> | React.ReactElement;\n  ListFooterComponent?: React.ComponentType<any> | React.ReactElement;\n  onScroll?: (event: NativeSyntheticEvent<NativeScrollEvent>) => void;\n  onViewableItemsChanged?: (info: {\n    viewableItems: ViewToken[];\n    changed: ViewToken[];\n  }) => void;\n  viewabilityConfig?: any;\n  refreshing?: boolean;\n  onRefresh?: () => void;\n  keyExtractor?: (item: object, index: number) => string;\n}\n\nconst AnimatedSectionList: React.FC<Props> = ({\n  sections,\n  renderItem,\n  renderSectionHeader,\n  animationType,\n  animationDuration,\n  focused = true,\n  sectionlistRef,\n  contentContainerStyle,\n  scrollIndicatorInsets,\n  ListEmptyComponent,\n  ListHeaderComponent,\n  ListFooterComponent,\n  onScroll,\n  onViewableItemsChanged,\n  viewabilityConfig,\n  refreshing,\n  onRefresh,\n  keyExtractor,\n}) => {\n  const handleRenderItem: any = (args: any) => {\n    switch (animationType) {\n      case AnimationType.SlideFromBottom:\n        return (\n          <SlideFromBottomAnimatedItem\n            renderItem={renderItem}\n            args={args}\n            focused={focused}\n          />\n        );\n      case AnimationType.SlideFromRight:\n        return (\n          <SlideFromRightAnimatedItem\n            renderItem={renderItem}\n            args={args}\n            focused={focused}\n          />\n        );\n      case AnimationType.Fade:\n        return (\n          <FadeAnimatedItem\n            renderItem={renderItem}\n            args={args}\n            animationDuration={animationDuration}\n            focused={focused}\n          />\n        );\n      case AnimationType.Rotate:\n        return (\n          <RotateAnimatedItem\n            renderItem={renderItem}\n            args={args}\n            animationDuration={animationDuration}\n            focused={focused}\n          />\n        );\n      case AnimationType.Dive:\n        return (\n          <DiveAnimatedItem\n            renderItem={renderItem}\n            args={args}\n            focused={focused}\n          />\n        );\n      case AnimationType.None:\n        return renderItem(args);\n      default:\n        return;\n    }\n  };\n\n  return (\n    <SectionList\n      ref={sectionlistRef}\n      contentContainerStyle={contentContainerStyle}\n      scrollIndicatorInsets={scrollIndicatorInsets}\n      sections={sections}\n      renderItem={handleRenderItem}\n      renderSectionHeader={renderSectionHeader}\n      refreshing={refreshing}\n      onRefresh={onRefresh}\n      ListEmptyComponent={ListEmptyComponent}\n      ListHeaderComponent={ListHeaderComponent}\n      ListFooterComponent={ListFooterComponent}\n      onScroll={onScroll}\n      onViewableItemsChanged={onViewableItemsChanged}\n      viewabilityConfig={viewabilityConfig}\n      keyExtractor={keyExtractor}\n    />\n  );\n};\n\nexport default AnimatedSectionList;\n"]}